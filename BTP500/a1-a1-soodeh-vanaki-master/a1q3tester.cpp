/**********************************************************************************/
/*                                                                                */
/*   a1 part 3 tester file                                                        */
/*                                                                                */
/*   To compile: g++ majorityelement.cpp a1q3tester.cpp timer.cpp -std=c++0x      */
/*                                                                                */
/**********************************************************************************/
#include "timer.h"
#include <string>
#include <iostream>
#include <cstdlib>

bool majorityElement(const int arr[], int& majority, int sz);

bool test1(std::string& error); 
bool test2(std::string& error); 
bool test3(std::string& error); 
bool test4(std::string& error); 
bool test5(std::string& error); 
bool test6(std::string& error);

const int numTests=6;
typedef bool (*TestPtr)(std::string&);

int main(void){
    TestPtr runTest[numTests]={test1, test2, test3, test4, test5, test6};
    std::string testSummary[numTests]={
                            "Simple testing",
                            "Testing 100 element array",
                            "Testing 5000 element array",
                            "Testing large array with a majorityelement",
                            "Testing edge cases",
                            "Timing Test"
                        };
    std::string msg;
    bool result=true;
    int numPassed=0;
    for(int i=0;result && i<numTests;i++){
        result = runTest[i](msg);
        if(!result){
            std::cout << "Test " << i+1 <<" - "<< testSummary[i]<< ": failed." << std::endl;
            std::cout << msg << std::endl;
        }
        else{
            numPassed++;
            std::cout << "Test " << i+1 <<" - "<< testSummary[i]<< ": passed." << std::endl;
        }
    }
    if(numPassed == numTests){
        std::cout << "Congratulations! You have passed testing for A1 part 1" << std::endl;
    }
    else{
        std::cout << "Looks like you still have some work left to do" << std::endl;
    }
}
bool test1(std::string& error){
    int data[10][25]={{5,5, 5,5, 3,2, 5,5, 5,5, 6,6, 7,7, 6,6, 8,8, 8,8, 5,5},
                      {5,5, 5,5, 3,2, 5,5, 4,5, 6,6, 7,7, 6,6, 8,8, 8,8, 5,5},
                      {5,1, 5,5, 3,2, 4,5, 4,5, 6,6, 7,7, 6,6, 8,8, 8,8, 5,5},
                      {5,5, 5,5, 5,5, 5,5, 5,5, 4,4, 4,4, 4,4, 4,4, 4,4},
                      {5,5, 5,5, 5,5, 5,5, 5,5, 4,4, 4,4, 4,4, 4,4, 4,4, 5},
                      {5,5, 5,5, 5,5, 5,5, 5,5, 4,4, 4,4, 4,4, 4,4, 4,4, 4},
                      {3,3, 3,3, 3,3, 3,3, 3,3, 3,4, 4,4, 4,4, 4,4, 4,4, 4},
                      {5,5, 5,5, 5,5, 5,5, 5,4, 4,5, 4,5, 4,4, 4,4, 4,4, 4},
                      {4,5, 5,5, 5,5, 5,5, 5,5, 4,4, 4,4, 4,4, 4,4, 4,4},
                      {5,5, 5,5, 5,5, 5,5, 4,4, 4,4, 4,4, 4,4, 4,4, 5,5, 3}};
    //size of each of the arrays above
    int sz[10]={22,22,22,20,21,21,21,21,20,21}; 
    //the majority element in each array.  If it is 0, it means the array has no majority
    int majority[12]={0,0,0,0,5,4,3,5,4,0,0,8} ;    
	int majorElem=-1;
	bool correct=true;
	bool hasMajority[10]={false,false,false,false,true,true,true,true,true,false};   
 
    for(int i=0;correct && i<10;i++){
    	bool rc=majorityElement(data[i],majorElem,sz[i]);
    	if(rc!=hasMajority[i]){
    		error = "Error 1a: majority element function returned an incorrect value\n";
    		error += "On data = {";
    		for(int j=0; j< sz[i] - 1;j++){
    			error += std::to_string(data[i][j]);
    			error += ",";
    			if(j%21 == 20){
    				error += "\n";
    			}
    		}
    		error += std::to_string(data[i][sz[i]-1]);
    		error +="}\nreturn value should be: ";
    		error += ((hasMajority[i])?"true":"false");
    		error += "\nyour function is returning: ";
    		error += ((rc)?"true":"false");
    		correct=false;
    	}
    	else{
    		if(rc==true && majority[i] !=majorElem){
	    		error = "Error 1b: majorityElement found is not the correct value.\n";
    			error += "On data = {";
    			for(int j=0; j< sz[i] - 1;j++){
    				error += std::to_string(data[i][j]);
    				error += ",";
	    			if(j%21 == 20){
    					error += "\n";
    				}
	    		}
    			error += std::to_string(data[i][sz[i]-1]);
	    		error +="}\nThe correct majority element is:  ";
    			error += std::to_string(majority[i]);
	    		error += "\nyour function is passed back: ";
    			error += std::to_string(majorElem);
    			correct=false;
    		}
    	}
    }
    return correct;
}

bool test2(std::string& error){

    int data[100]=	{13, 13, 8, 8, 8, 8, 9, 8, 12, 8, 3, 9, 8, 8, 9, 17, 19, 19, 8, 8, 17, 8, 8, 10, 19, 
                    19, 7, 8, 16, 5, 8, 14, 1, 8, 8, 8, 8, 8, 8, 8, 2, 8, 4, 13, 8, 8, 15, 15, 5, 8, 
                    16, 9, 14, 1, 15, 4, 18, 8, 5, 8, 8, 8, 8, 18, 8, 17, 8, 18, 17, 8, 8, 11, 15, 18, 8, 
                    8, 8, 8, 14, 8, 8, 10, 8, 8, 8, 2, 8, 1, 12, 1, 8, 18, 16, 8, 8, 15, 8, 8, 8, 19};
    int majorElem = -1;
   	bool rc=majorityElement(data,majorElem,100);

   	bool correct = true;
    if(rc!=false){
    	error = "Error 2: majority element function returned an incorrect value\n";
    	error += "On data = {";
    	for(int j=0; j< 99;j++){
    			error += std::to_string(data[j]);
    			error += ", ";
    			if(j%21 == 20){
    				error += "\n";
    			}
    	}
    	error += std::to_string(data[99]);
    	error +="}\nreturn value should be: false";
    	error += "\nyour function is returning: ";
    	error += ((rc)?"true":"false");
    	correct=false;
    }
    return correct;
}
                    
bool test3(std::string& error){
    int data[5000] = {8, 9, 8, 6, 6, 10, 8, 8, 8, 8, 8, 8, 8, 8, 18, 8, 8, 8, 3, 5, 12, 7, 16, 3, 8, 
                        8, 8, 15, 14, 8, 19, 8, 8, 18, 8, 8, 11, 9, 13, 5, 8, 8, 8, 1, 15, 8, 16, 19, 8, 16, 
                        12, 8, 8, 8, 9, 15, 9, 8, 15, 8, 2, 8, 8, 11, 8, 8, 8, 11, 3, 11, 8, 15, 0, 3, 8, 
                        8, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 18, 9, 13, 7, 13, 8, 16, 4, 8, 8, 
                        8, 8, 8, 16, 8, 13, 16, 8, 8, 11, 8, 8, 17, 11, 8, 8, 17, 8, 13, 4, 8, 8, 8, 8, 7, 
                        8, 8, 6, 18, 8, 8, 17, 14, 0, 8, 8, 5, 15, 2, 3, 7, 9, 3, 3, 8, 18, 6, 8, 8, 8, 
                        3, 0, 8, 0, 0, 8, 18, 16, 8, 8, 8, 12, 8, 2, 11, 8, 3, 8, 8, 10, 9, 8, 8, 10, 16, 
                        8, 8, 8, 8, 4, 8, 8, 0, 11, 5, 8, 8, 8, 13, 8, 12, 8, 8, 8, 8, 17, 10, 8, 8, 13, 
                        0, 8, 12, 1, 8, 8, 7, 7, 8, 1, 8, 8, 14, 13, 8, 19, 8, 9, 9, 8, 8, 8, 8, 8, 8, 
                        8, 8, 8, 12, 18, 11, 8, 11, 8, 1, 0, 8, 8, 7, 8, 3, 8, 7, 15, 2, 8, 8, 4, 17, 3, 
                        8, 8, 8, 15, 8, 8, 13, 0, 9, 7, 8, 8, 4, 9, 8, 8, 8, 8, 0, 8, 10, 8, 4, 8, 8, 
                        8, 7, 18, 8, 18, 8, 14, 0, 8, 8, 8, 3, 8, 11, 8, 8, 8, 15, 10, 12, 8, 17, 7, 13, 9, 
                        8, 1, 9, 8, 0, 10, 6, 8, 18, 8, 19, 8, 8, 7, 15, 8, 8, 4, 8, 19, 5, 8, 5, 11, 18, 
                        8, 4, 19, 11, 4, 1, 8, 8, 8, 12, 8, 14, 17, 8, 5, 2, 17, 8, 8, 8, 19, 8, 17, 12, 8, 
                        17, 8, 10, 8, 1, 8, 7, 8, 8, 18, 8, 8, 8, 19, 8, 6, 1, 12, 8, 10, 8, 9, 3, 11, 8, 
                        8, 11, 10, 8, 17, 8, 10, 16, 11, 8, 4, 8, 10, 8, 8, 8, 8, 1, 19, 8, 10, 1, 2, 8, 8, 
                        8, 7, 2, 8, 10, 1, 8, 8, 12, 16, 8, 8, 8, 8, 8, 8, 8, 15, 11, 5, 17, 8, 8, 13, 9, 
                        8, 1, 18, 8, 2, 8, 3, 10, 15, 8, 8, 18, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 1, 8, 8, 
                        8, 13, 9, 19, 0, 8, 10, 8, 8, 2, 8, 8, 8, 8, 15, 8, 8, 8, 10, 3, 12, 4, 8, 8, 8, 
                        3, 8, 8, 2, 10, 18, 8, 3, 5, 8, 1, 6, 19, 14, 19, 8, 8, 5, 8, 8, 8, 0, 0, 6, 8, 
                        8, 9, 8, 18, 1, 8, 8, 8, 8, 8, 16, 6, 4, 16, 8, 8, 8, 8, 8, 8, 10, 7, 8, 14, 8, 
                        12, 8, 19, 19, 8, 7, 19, 8, 8, 8, 8, 14, 8, 7, 8, 4, 9, 8, 10, 7, 1, 16, 8, 11, 8, 
                        8, 8, 8, 17, 6, 8, 12, 12, 11, 8, 13, 8, 8, 8, 14, 8, 8, 8, 8, 17, 12, 8, 1, 2, 16, 
                        8, 0, 8, 8, 8, 9, 8, 10, 8, 0, 8, 8, 8, 8, 8, 8, 8, 5, 15, 18, 1, 8, 8, 8, 8, 
                        10, 8, 4, 15, 10, 8, 5, 10, 3, 8, 10, 8, 8, 8, 8, 8, 19, 8, 8, 5, 8, 10, 8, 8, 8, 
                        8, 6, 8, 2, 17, 4, 8, 8, 1, 16, 8, 8, 8, 8, 8, 6, 12, 3, 8, 7, 6, 12, 0, 17, 15, 
                        11, 8, 8, 8, 8, 15, 8, 8, 2, 8, 8, 8, 4, 8, 8, 2, 8, 2, 16, 12, 8, 8, 8, 8, 8, 
                        8, 8, 12, 3, 8, 9, 6, 9, 17, 6, 8, 8, 8, 8, 8, 17, 8, 17, 8, 8, 11, 8, 17, 8, 8, 
                        10, 19, 9, 8, 8, 12, 14, 3, 8, 10, 11, 5, 9, 8, 1, 8, 3, 8, 8, 6, 8, 1, 8, 12, 10, 
                        8, 8, 8, 6, 4, 19, 9, 8, 8, 8, 3, 8, 8, 6, 8, 8, 15, 16, 8, 8, 4, 16, 8, 3, 8, 
                        8, 8, 11, 8, 6, 18, 8, 15, 8, 8, 8, 19, 17, 8, 18, 15, 15, 8, 8, 8, 11, 8, 8, 8, 8, 
                        8, 8, 5, 15, 7, 17, 8, 8, 15, 8, 16, 4, 6, 4, 14, 8, 5, 8, 8, 14, 8, 5, 6, 8, 8, 
                        8, 10, 0, 7, 8, 8, 8, 8, 8, 19, 8, 8, 17, 8, 8, 18, 9, 8, 5, 11, 14, 8, 8, 8, 6, 
                        1, 8, 8, 18, 8, 16, 8, 8, 8, 8, 17, 8, 8, 8, 5, 2, 14, 6, 8, 8, 8, 13, 8, 18, 11, 
                        0, 12, 15, 8, 15, 8, 7, 12, 8, 8, 19, 8, 8, 17, 1, 14, 16, 18, 8, 6, 8, 4, 8, 1, 8, 
                        2, 16, 8, 8, 8, 10, 14, 8, 8, 9, 19, 10, 8, 19, 19, 8, 0, 17, 8, 8, 8, 5, 8, 16, 8, 
                        2, 0, 8, 8, 1, 18, 12, 8, 1, 8, 8, 15, 8, 2, 1, 19, 8, 8, 15, 8, 8, 8, 15, 8, 8, 
                        11, 10, 8, 16, 4, 2, 3, 8, 8, 8, 8, 19, 8, 10, 12, 12, 8, 19, 10, 10, 15, 8, 8, 10, 8, 
                        8, 19, 13, 8, 5, 8, 13, 16, 8, 2, 15, 17, 8, 8, 8, 8, 8, 15, 12, 8, 8, 6, 19, 8, 8, 
                        6, 7, 18, 17, 16, 3, 8, 12, 8, 11, 2, 13, 8, 8, 8, 7, 8, 18, 8, 0, 16, 8, 8, 8, 8, 
                        8, 8, 1, 1, 8, 8, 8, 7, 2, 8, 4, 5, 3, 8, 3, 1, 17, 17, 8, 8, 8, 19, 8, 8, 6, 
                        8, 15, 1, 11, 8, 16, 8, 8, 8, 19, 5, 7, 8, 8, 8, 8, 3, 6, 3, 12, 18, 8, 8, 0, 8, 
                        8, 7, 8, 8, 9, 13, 16, 8, 8, 17, 8, 9, 5, 14, 8, 9, 9, 8, 8, 8, 2, 8, 19, 3, 19, 
                        14, 8, 2, 8, 15, 8, 10, 8, 8, 1, 8, 8, 8, 8, 14, 8, 8, 8, 6, 8, 8, 17, 8, 8, 8, 
                        8, 8, 0, 8, 8, 13, 8, 17, 7, 13, 19, 8, 8, 4, 18, 8, 8, 8, 17, 8, 0, 8, 8, 8, 8, 
                        8, 9, 8, 11, 10, 10, 8, 1, 8, 8, 8, 8, 8, 1, 9, 5, 8, 8, 9, 8, 14, 8, 8, 8, 15, 
                        17, 2, 8, 8, 19, 17, 8, 8, 8, 8, 8, 18, 8, 4, 18, 8, 8, 15, 6, 8, 8, 18, 12, 12, 8, 
                        8, 6, 8, 8, 1, 8, 8, 9, 4, 8, 8, 8, 0, 8, 12, 17, 6, 1, 9, 19, 8, 8, 1, 19, 13, 
                        9, 8, 8, 19, 8, 4, 17, 8, 8, 8, 10, 8, 9, 8, 12, 17, 8, 4, 8, 8, 19, 15, 4, 8, 8, 
                        3, 14, 8, 15, 2, 16, 8, 8, 8, 8, 8, 10, 8, 19, 8, 8, 15, 8, 8, 10, 3, 7, 10, 7, 8, 
                        8, 8, 12, 16, 2, 9, 14, 8, 12, 8, 8, 5, 8, 8, 8, 15, 6, 8, 11, 8, 8, 17, 9, 2, 19, 
                        0, 8, 8, 16, 8, 17, 3, 8, 8, 8, 10, 6, 9, 18, 19, 14, 8, 8, 8, 13, 1, 2, 8, 12, 8, 
                        0, 7, 10, 19, 8, 16, 1, 8, 8, 0, 8, 5, 8, 8, 13, 8, 6, 18, 8, 8, 8, 8, 10, 8, 12, 
                        7, 8, 16, 8, 8, 8, 8, 16, 2, 6, 15, 8, 8, 17, 19, 8, 16, 8, 8, 13, 8, 0, 0, 8, 13, 
                        10, 8, 8, 8, 8, 13, 16, 4, 8, 8, 1, 11, 8, 8, 8, 15, 18, 8, 8, 3, 8, 1, 0, 8, 10, 
                        5, 8, 8, 8, 8, 0, 8, 8, 18, 8, 2, 8, 8, 8, 14, 8, 8, 0, 8, 2, 8, 8, 8, 8, 15, 
                        14, 14, 8, 8, 8, 8, 3, 8, 18, 0, 6, 5, 15, 15, 8, 2, 11, 5, 17, 8, 8, 16, 11, 6, 10, 
                        8, 2, 13, 8, 3, 8, 8, 3, 17, 7, 8, 14, 8, 8, 8, 8, 8, 17, 19, 12, 4, 8, 9, 5, 0, 
                        17, 8, 0, 7, 8, 0, 8, 8, 8, 8, 9, 8, 12, 8, 8, 1, 8, 8, 5, 8, 8, 7, 14, 8, 10, 
                        19, 8, 19, 3, 8, 8, 17, 2, 8, 4, 8, 8, 13, 8, 8, 8, 8, 13, 8, 8, 2, 0, 15, 4, 8, 
                        8, 8, 8, 8, 8, 1, 8, 8, 9, 8, 8, 8, 15, 3, 8, 16, 6, 8, 2, 8, 1, 14, 8, 8, 7, 
                        17, 13, 8, 8, 7, 8, 8, 8, 8, 7, 8, 5, 8, 8, 17, 7, 11, 19, 5, 14, 4, 9, 12, 8, 9, 
                        8, 8, 14, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 7, 7, 9, 8, 5, 1, 8, 8, 14, 14, 16, 8, 
                        14, 11, 8, 8, 5, 8, 8, 8, 9, 3, 8, 5, 8, 11, 3, 8, 7, 8, 8, 3, 6, 0, 2, 8, 3, 
                        3, 8, 1, 17, 17, 12, 0, 5, 13, 8, 8, 8, 8, 8, 8, 8, 17, 8, 8, 8, 8, 8, 18, 19, 3, 
                        18, 8, 12, 1, 17, 7, 6, 8, 8, 8, 19, 4, 8, 10, 8, 0, 5, 19, 2, 7, 9, 9, 18, 8, 15, 
                        15, 4, 6, 8, 8, 8, 8, 11, 8, 0, 18, 8, 8, 8, 12, 11, 8, 8, 8, 8, 8, 8, 0, 0, 8, 
                        8, 8, 4, 13, 8, 8, 8, 1, 18, 7, 8, 15, 3, 8, 0, 8, 1, 10, 8, 8, 7, 13, 8, 8, 16, 
                        8, 4, 15, 13, 8, 11, 8, 10, 7, 8, 8, 8, 8, 11, 8, 8, 8, 8, 2, 8, 8, 17, 8, 9, 8, 
                        8, 7, 19, 8, 8, 16, 11, 8, 15, 19, 19, 8, 8, 8, 8, 8, 8, 0, 8, 13, 1, 8, 8, 8, 8, 
                        18, 8, 8, 10, 12, 8, 8, 8, 8, 19, 12, 8, 10, 5, 8, 13, 8, 8, 2, 8, 19, 8, 15, 8, 13, 
                        0, 10, 16, 8, 8, 8, 8, 19, 16, 1, 8, 8, 13, 0, 8, 12, 13, 8, 18, 10, 8, 8, 5, 8, 6, 
                        18, 8, 17, 8, 8, 3, 8, 4, 5, 2, 8, 8, 8, 2, 5, 15, 8, 8, 8, 8, 2, 6, 8, 19, 8, 
                        8, 8, 8, 3, 8, 8, 18, 8, 17, 7, 2, 4, 8, 15, 19, 3, 8, 18, 3, 8, 12, 8, 1, 9, 8, 
                        16, 7, 8, 8, 15, 8, 7, 8, 8, 8, 6, 8, 2, 19, 6, 0, 8, 2, 8, 9, 8, 8, 13, 8, 8, 
                        8, 8, 8, 7, 8, 8, 5, 14, 5, 19, 10, 2, 8, 19, 8, 4, 8, 4, 8, 8, 8, 8, 8, 8, 15, 
                        8, 8, 5, 8, 8, 8, 3, 8, 8, 8, 8, 8, 19, 8, 6, 10, 8, 8, 4, 7, 8, 8, 8, 0, 8, 
                        8, 1, 8, 8, 8, 9, 15, 8, 8, 9, 8, 17, 0, 12, 8, 2, 12, 7, 8, 13, 8, 3, 8, 10, 10, 
                        3, 14, 18, 0, 8, 17, 5, 12, 9, 8, 8, 8, 17, 8, 8, 8, 8, 8, 8, 13, 1, 7, 8, 1, 8, 
                        18, 8, 8, 8, 3, 8, 8, 7, 8, 7, 8, 8, 8, 10, 8, 8, 8, 8, 8, 8, 19, 9, 16, 8, 12, 
                        8, 8, 8, 19, 11, 8, 8, 8, 4, 7, 19, 15, 8, 11, 8, 8, 18, 3, 8, 8, 17, 8, 13, 3, 8, 
                        8, 15, 16, 8, 8, 8, 2, 7, 14, 10, 16, 3, 8, 10, 8, 3, 12, 0, 17, 8, 13, 8, 8, 8, 8, 
                        8, 6, 8, 2, 8, 16, 8, 5, 8, 3, 8, 8, 10, 7, 12, 4, 16, 11, 8, 0, 10, 8, 16, 8, 8, 
                        14, 8, 8, 19, 8, 18, 8, 8, 6, 8, 8, 9, 7, 8, 8, 8, 8, 8, 8, 8, 19, 7, 8, 8, 8, 
                        16, 8, 8, 8, 1, 8, 8, 8, 14, 8, 9, 7, 8, 8, 8, 8, 8, 8, 3, 3, 8, 8, 8, 12, 8, 
                        15, 11, 8, 8, 8, 8, 8, 19, 6, 8, 9, 1, 3, 8, 8, 8, 9, 3, 0, 2, 8, 8, 8, 8, 8, 
                        8, 8, 8, 8, 8, 2, 8, 12, 8, 8, 3, 7, 4, 6, 8, 8, 8, 6, 8, 8, 8, 8, 5, 12, 8, 
                        8, 6, 8, 8, 8, 1, 8, 17, 8, 8, 8, 17, 8, 8, 6, 8, 8, 8, 8, 15, 5, 3, 8, 8, 8, 
                        4, 6, 8, 8, 8, 8, 0, 19, 8, 17, 8, 11, 8, 8, 12, 8, 16, 8, 8, 13, 8, 19, 8, 8, 8, 
                        8, 8, 8, 2, 8, 8, 8, 3, 7, 19, 19, 11, 3, 16, 18, 8, 6, 8, 8, 7, 18, 10, 8, 8, 17, 
                        7, 19, 8, 6, 11, 15, 8, 6, 8, 8, 8, 8, 7, 9, 8, 8, 8, 12, 10, 8, 11, 14, 8, 8, 8, 
                        13, 8, 8, 7, 8, 9, 8, 8, 8, 11, 18, 17, 3, 15, 8, 8, 5, 8, 8, 4, 8, 8, 8, 5, 8, 
                        3, 8, 16, 8, 16, 5, 19, 11, 8, 9, 8, 5, 8, 19, 8, 8, 8, 8, 8, 8, 17, 8, 8, 8, 4, 
                        9, 5, 15, 8, 7, 16, 8, 13, 8, 12, 19, 6, 17, 2, 8, 8, 8, 8, 16, 8, 8, 8, 16, 13, 16, 
                        15, 19, 13, 8, 8, 16, 0, 17, 5, 8, 17, 8, 8, 2, 14, 8, 19, 14, 8, 8, 17, 14, 8, 8, 8, 
                        8, 8, 8, 8, 10, 4, 8, 14, 17, 8, 8, 12, 8, 16, 8, 8, 10, 13, 8, 0, 6, 8, 8, 1, 3, 
                        5, 8, 8, 7, 8, 12, 1, 7, 15, 1, 8, 8, 8, 8, 8, 17, 15, 6, 3, 19, 8, 1, 11, 3, 8, 
                        17, 13, 14, 8, 8, 7, 0, 8, 8, 4, 3, 8, 8, 8, 8, 8, 0, 0, 2, 5, 15, 8, 8, 5, 6, 
                        8, 14, 2, 12, 8, 8, 8, 8, 9, 15, 16, 8, 1, 8, 7, 8, 3, 8, 8, 13, 8, 8, 16, 8, 4, 
                        16, 8, 19, 8, 8, 8, 8, 8, 8, 15, 12, 8, 8, 8, 12, 8, 8, 8, 8, 15, 8, 8, 7, 17, 7, 
                        8, 8, 8, 8, 8, 8, 15, 12, 3, 19, 6, 8, 19, 8, 8, 8, 9, 5, 8, 1, 15, 8, 8, 3, 8, 
                        13, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 8, 1, 8, 11, 8, 16, 8, 17, 8, 8, 4, 4, 
                        0, 18, 8, 2, 8, 16, 6, 16, 8, 8, 8, 0, 8, 8, 6, 17, 8, 8, 8, 8, 8, 14, 3, 13, 17, 
                        8, 8, 11, 8, 8, 7, 15, 8, 8, 8, 8, 0, 8, 15, 15, 8, 8, 16, 15, 8, 19, 8, 8, 15, 8, 
                        8, 7, 8, 8, 8, 8, 2, 18, 1, 8, 8, 16, 8, 3, 8, 8, 0, 2, 8, 5, 9, 13, 7, 8, 8, 
                        10, 8, 19, 0, 4, 6, 5, 8, 2, 19, 0, 11, 18, 10, 8, 17, 8, 8, 8, 16, 6, 8, 8, 8, 4, 
                        7, 12, 8, 18, 8, 9, 11, 6, 8, 8, 1, 9, 19, 8, 8, 8, 14, 8, 2, 3, 8, 8, 8, 5, 19, 
                        13, 12, 8, 13, 11, 8, 3, 8, 11, 8, 4, 9, 8, 3, 8, 8, 7, 8, 8, 8, 8, 8, 4, 8, 8, 
                        17, 8, 8, 8, 10, 10, 8, 8, 8, 8, 10, 17, 14, 8, 8, 1, 8, 8, 14, 2, 10, 17, 8, 11, 0, 
                        16, 9, 5, 8, 8, 15, 8, 3, 2, 8, 8, 8, 8, 7, 14, 8, 12, 8, 19, 8, 8, 8, 8, 4, 19, 
                        8, 3, 8, 15, 8, 19, 17, 8, 8, 8, 2, 8, 11, 8, 4, 6, 0, 8, 4, 11, 2, 5, 8, 8, 8, 
                        8, 5, 8, 8, 18, 8, 3, 15, 11, 8, 4, 18, 5, 8, 8, 1, 8, 8, 13, 8, 14, 8, 8, 8, 19, 
                        8, 18, 7, 7, 13, 13, 7, 12, 10, 13, 3, 8, 18, 9, 12, 8, 8, 16, 2, 8, 8, 8, 13, 8, 8, 
                        8, 6, 7, 8, 13, 16, 16, 8, 8, 8, 1, 8, 8, 19, 8, 8, 0, 8, 8, 8, 8, 4, 8, 8, 8, 
                        8, 8, 19, 8, 10, 9, 8, 8, 5, 8, 18, 2, 1, 8, 8, 10, 8, 15, 8, 11, 8, 8, 17, 10, 9, 
                        9, 7, 8, 3, 16, 8, 8, 12, 8, 8, 15, 17, 6, 8, 8, 12, 8, 1, 8, 8, 8, 8, 8, 8, 8, 
                        8, 13, 8, 0, 19, 15, 11, 19, 9, 18, 8, 7, 16, 8, 5, 8, 19, 19, 8, 14, 8, 18, 8, 8, 18, 
                        13, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 14, 8, 8, 8, 8, 15, 8, 19, 8, 8, 8, 12, 6, 8, 
                        8, 4, 8, 5, 9, 8, 8, 8, 8, 16, 4, 8, 18, 8, 8, 12, 8, 8, 1, 9, 11, 7, 5, 14, 0, 
                        8, 11, 8, 1, 15, 14, 14, 8, 19, 8, 1, 12, 10, 8, 14, 8, 11, 8, 19, 12, 16, 8, 6, 3, 19, 
                        8, 13, 8, 3, 2, 1, 8, 8, 8, 3, 8, 8, 8, 8, 8, 17, 8, 0, 8, 18, 8, 0, 8, 2, 0, 
                        8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 0, 17, 8, 14, 8, 8, 7, 11, 8, 8, 8, 8, 
                        8, 8, 5, 2, 8, 8, 8, 8, 8, 8, 10, 2, 0, 8, 16, 16, 6, 8, 1, 8, 8, 8, 3, 8, 16, 
                        17, 8, 1, 12, 6, 8, 8, 11, 8, 1, 18, 17, 8, 8, 8, 8, 6, 1, 15, 14, 8, 10, 8, 8, 0, 
                        11, 9, 8, 17, 3, 8, 8, 8, 6, 8, 8, 9, 8, 8, 8, 8, 19, 7, 16, 8, 8, 8, 9, 13, 8, 
                        8, 3, 8, 17, 12, 8, 11, 19, 19, 9, 8, 15, 14, 2, 8, 7, 3, 8, 8, 8, 8, 15, 8, 5, 8, 
                        8, 8, 8, 8, 8, 15, 8, 4, 8, 8, 5, 17, 17, 8, 8, 8, 11, 8, 8, 13, 15, 8, 8, 15, 14, 
                        9, 8, 3, 8, 5, 8, 8, 8, 18, 0, 15, 14, 8, 13, 16, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 
                        11, 8, 8, 12, 12, 8, 8, 8, 2, 8, 13, 8, 14, 9, 1, 14, 7, 18, 8, 13, 3, 8, 8, 8, 9, 
                        6, 4, 8, 2, 8, 8, 16, 8, 8, 4, 8, 9, 11, 16, 17, 16, 8, 8, 15, 5, 8, 4, 14, 1, 5, 
                        8, 8, 8, 19, 8, 1, 8, 8, 17, 12, 7, 16, 6, 2, 8, 8, 18, 8, 2, 15, 3, 8, 9, 16, 8, 
                        9, 8, 1, 6, 8, 18, 8, 1, 0, 8, 8, 13, 8, 0, 8, 8, 18, 8, 8, 4, 3, 9, 5, 8, 13, 
                        0, 5, 8, 8, 8, 8, 8, 4, 3, 10, 10, 8, 5, 6, 8, 4, 8, 11, 4, 8, 17, 8, 8, 8, 8, 
                        8, 8, 8, 11, 8, 8, 8, 8, 8, 8, 14, 6, 6, 4, 8, 8, 8, 8, 8, 4, 17, 8, 19, 15, 8, 
                        10, 8, 8, 10, 19, 8, 18, 2, 12, 8, 2, 8, 8, 8, 4, 7, 8, 16, 12, 4, 3, 8, 9, 8, 1, 
                        2, 8, 8, 9, 8, 8, 16, 8, 8, 8, 9, 18, 8, 14, 1, 2, 1, 8, 8, 8, 8, 19, 8, 11, 17, 
                        8, 8, 8, 8, 16, 8, 8, 10, 17, 8, 8, 17, 8, 8, 3, 9, 4, 8, 8, 8, 13, 9, 13, 8, 8, 
                        10, 17, 8, 8, 8, 8, 8, 17, 8, 17, 8, 8, 8, 8, 8, 19, 8, 8, 16, 8, 8, 8, 4, 8, 18, 
                        0, 12, 8, 8, 8, 8, 8, 8, 1, 8, 8, 12, 8, 16, 8, 6, 8, 8, 3, 8, 14, 8, 17, 2, 8, 
                        8, 18, 8, 8, 7, 5, 16, 8, 8, 8, 19, 0, 3, 14, 8, 8, 1, 19, 8, 8, 8, 8, 8, 8, 16, 
                        16, 8, 19, 0, 8, 8, 8, 8, 8, 0, 8, 7, 5, 8, 7, 10, 8, 8, 8, 6, 8, 8, 3, 1, 10, 
                        3, 13, 1, 1, 8, 10, 9, 8, 17, 8, 8, 1, 15, 13, 8, 8, 14, 11, 15, 8, 15, 8, 8, 8, 19, 
                        19, 8, 18, 9, 8, 8, 8, 5, 14, 8, 8, 5, 18, 15, 8, 8, 11, 8, 8, 8, 3, 9, 8, 5, 11, 
                        13, 8, 8, 6, 8, 8, 8, 8, 1, 8, 8, 16, 8, 13, 12, 8, 8, 8, 8, 8, 8, 9, 8, 5, 8, 
                        8, 8, 8, 18, 8, 8, 3, 8, 8, 8, 8, 8, 8, 11, 11, 8, 19, 8, 8, 1, 8, 6, 8, 8, 19, 
                        8, 8, 7, 8, 8, 8, 8, 13, 8, 8, 8, 8, 16, 13, 8, 8, 8, 8, 13, 11, 8, 18, 16, 13, 11, 
                        7, 1, 9, 5, 6, 8, 8, 8, 8, 19, 14, 0, 8, 8, 8, 8, 8, 17, 8, 3, 16, 8, 8, 8, 8, 
                        2, 8, 8, 8, 1, 5, 8, 8, 8, 19, 15, 8, 13, 8, 16, 8, 19, 8, 8, 8, 7, 8, 8, 8, 8, 
                        15, 14, 8, 8, 8, 6, 8, 9, 8, 10, 14, 8, 8, 13, 8, 8, 8, 8, 5, 6, 2, 8, 8, 8, 16, 
                        8, 5, 8, 9, 13, 15, 1, 8, 8, 9, 8, 5, 8, 13, 3, 8, 8, 8, 14, 19, 8, 8, 8, 1, 1, 
                        10, 8, 8, 4, 9, 8, 14, 8, 18, 12, 8, 8, 13, 8, 12, 11, 12, 8, 8, 8, 8, 8, 6, 8, 8, 
                        8, 8, 14, 8, 8, 17, 12, 8, 8, 16, 8, 8, 8, 9, 2, 8, 8, 8, 17, 8, 8, 8, 15, 8, 8, 
                        1, 14, 12, 8, 8, 8, 16, 11, 4, 4, 3, 0, 19, 5, 8, 8, 2, 8, 12, 8, 4, 2, 8, 6, 8, 
                        8, 8, 8, 8, 8, 8, 14, 8, 8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8, 15, 8, 3, 3, 3, 15, 
                        8, 8, 8, 1, 2, 8, 11, 19, 8, 8, 8, 9, 3, 0, 4, 8, 18, 8, 0, 8, 8, 17, 8, 15, 12, 
                        8, 12, 11, 8, 8, 8, 8, 8, 8, 15, 9, 5, 8, 8, 8, 17, 18, 8, 8, 1, 1, 8, 8, 8, 13, 
                        9, 11, 8, 11, 8, 8, 8, 18, 2, 1, 8, 8, 8, 8, 8, 14, 8, 17, 8, 11, 8, 8, 15, 4, 10, 
                        8, 8, 8, 13, 8, 8, 8, 10, 8, 8, 1, 8, 0, 17, 15, 8, 5, 13, 8, 15, 3, 8, 6, 8, 8, 
                        8, 8, 8, 8, 2, 9, 8, 12, 0, 8, 19, 8, 8, 11, 8, 8, 0, 8, 8, 8, 15, 8, 8, 4, 5, 
                        5, 8, 8, 13, 8, 5, 8, 8, 8, 8, 2, 3, 8, 8, 18, 8, 8, 8, 7, 12, 19, 8, 8, 8, 8, 
                        8, 12, 3, 10, 5, 8, 3, 8, 8, 8, 3, 8, 8, 8, 8, 13, 8, 8, 3, 9, 18, 8, 0, 8, 14, 
                        9, 8, 6, 8, 7, 14, 17, 8, 11, 6, 8, 7, 8, 8, 8, 15, 19, 3, 8, 8, 7, 8, 8, 8, 14, 
                        8, 3, 8, 12, 18, 19, 8, 1, 9, 11, 8, 8, 8, 2, 8, 8, 8, 6, 15, 7, 8, 12, 16, 11, 15, 
                        8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 18, 0, 18, 8, 8, 16, 8, 8, 1, 5, 8, 0, 12, 13, 2, 
                        12, 8, 18, 8, 8, 8, 18, 8, 4, 10, 8, 7, 8, 18, 17, 9, 3, 8, 8, 8, 8, 8, 14, 8, 11, 
                        8, 17, 8, 19, 8, 8, 8, 17, 8, 7, 8, 8, 8, 17, 8, 4, 11, 8, 14, 0, 15, 14, 8, 8, 8, 
                        8, 8, 7, 8, 3, 8, 8, 8, 6, 8, 1, 8, 14, 18, 8, 8, 4, 8, 19, 6, 2, 18, 19, 8, 8, 
                        17, 8, 8, 14, 8, 14, 8, 8, 8, 8, 8, 19, 8, 1, 14, 8, 2, 8, 0, 15, 8, 5, 8, 8, 8, 
                        17, 8, 8, 8, 9, 8, 8, 12, 8, 16, 6, 10, 8, 1, 8, 8, 12, 8, 8, 8, 8, 8, 8, 17, 9, 
                        16, 8, 8, 11, 11, 8, 8, 15, 8, 3, 8, 17, 19, 1, 8, 8, 8, 8, 4, 4, 3, 13, 6, 8, 14, 
                        8, 2, 8, 1, 5, 19, 2, 8, 8, 8, 8, 8, 0, 7, 19, 8, 16, 8, 8, 8, 8, 8, 11, 8, 3, 
                        8, 8, 8, 0, 8, 13, 8, 5, 8, 3, 8, 15, 14, 8, 8, 8, 8, 13, 3, 19, 11, 15, 8, 12, 8, 
                        8, 8, 6, 8, 7, 8, 8, 8, 12, 1, 8, 15, 8, 17, 8, 8, 10, 12, 8, 8, 9, 8, 8, 8, 16, 
                        5, 8, 8, 13, 8, 8, 13, 8, 1, 6, 3, 2, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 13, 8, 19, 
                        8, 8, 7, 8, 8, 8, 18, 15, 8, 2, 8, 5, 8, 1, 16, 13, 8, 5, 8, 7, 7, 2, 8, 8, 14, 
                        8, 4, 5, 5, 3, 8, 8, 8, 8, 18, 1, 19, 17, 8, 8, 4, 16, 8, 6, 11, 14, 8, 10, 9, 8, 
                        8, 8, 12, 9, 3, 8, 8, 8, 3, 12, 4, 3, 8, 8, 8, 8, 8, 5, 16, 5, 10, 8, 8, 8, 8, 
                        8, 8, 8, 8, 8, 8, 8, 3, 6, 8, 8, 17, 8, 16, 8, 19, 12, 8, 17, 8, 8, 14, 15, 8, 8, 
                        14, 11, 8, 8, 9, 8, 13, 18, 8, 8, 18, 8, 8, 8, 8, 8, 1, 8, 4, 8, 10, 3, 8, 8, 3, 
                        8, 9, 1, 8, 0, 8, 8, 8, 1, 14, 8, 0, 12, 5, 11, 16, 9, 8, 9, 0, 15, 10, 8, 15, 8, 
                        8, 12, 8, 6, 16, 8, 3, 16, 8, 8, 7, 16, 8, 11, 14, 8, 3, 4, 18, 8, 8, 8, 8, 8, 9, 
                        8, 4, 8, 8, 8, 17, 8, 11, 8, 12, 8, 5, 6, 6, 8, 8, 8, 19, 8, 19, 12, 8, 0, 9, 17, 
                        8, 8, 8, 8, 12, 8, 3, 19, 8, 8, 17, 8, 8, 18, 8, 9, 16, 8, 15, 7, 17, 8, 8, 8, 8, 
                        12, 2, 10, 5, 8, 8, 4, 8, 17, 7, 8, 19, 2, 11, 9, 19, 8, 17, 13, 8, 8, 8, 7, 8, 2, 
                        12, 8, 15, 8, 8, 8, 19, 8, 8, 8, 1, 8, 8, 7, 8, 8, 8, 8, 8, 1, 1, 8, 14, 7, 11, 
                        9, 8, 8, 8, 10, 8, 7, 8, 8, 8, 8, 8, 8, 14, 8, 8, 18, 14, 8, 1, 8, 8, 8, 14, 17, 
                        19, 18, 15, 8, 8, 4, 15, 15, 11, 6, 8, 11, 13, 8, 10, 8, 8, 11, 9, 8, 8, 19, 1, 8, 8, 
                        2, 5, 18, 8, 13, 8, 18, 8, 18, 8, 7, 8, 8, 8, 8, 7, 8, 8, 17, 8, 5, 8, 8, 7, 8, 
                        16, 4, 8, 18, 3, 8, 1, 8, 15, 8, 8, 9, 8, 8, 8, 8, 4, 6, 4, 12, 15, 16, 15, 19, 3, 
                        8, 8, 6, 8, 18, 8, 16, 6, 8, 8, 8, 8, 16, 8, 8, 12, 6, 19, 2, 13, 8, 8, 15, 8, 8, 
                        8, 16, 18, 8, 15, 8, 4, 1, 17, 11, 11, 2, 9, 8, 8, 8, 15, 8, 8, 14, 8, 7, 8, 8, 13, 
                        8, 8, 8, 8, 3, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 16, 7, 8, 16, 8, 8, 8, 16, 8, 19, 
                        8, 18, 8, 12, 4, 5, 0, 16, 0, 8, 8, 8, 0, 8, 8, 7, 4, 8, 8, 8, 8, 14, 8, 8, 19, 
                        1, 17, 11, 8, 8, 9, 8, 14, 8, 0, 8, 18, 15, 8, 8, 8, 8, 8, 19, 8, 8, 19, 6, 2, 8, 
                        8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 16, 16, 6, 8, 8, 8, 3, 8, 8, 11, 0, 10, 2, 3, 8, 
                        17, 8, 8, 8, 8, 8, 16, 8, 8, 8, 4, 8, 8, 8, 8, 8, 17, 8, 15, 19, 3, 8, 8, 8, 8, 
                        18, 16, 8, 8, 8, 17, 17, 8, 14, 6, 10, 8, 8, 8, 8, 12, 8, 9, 8, 8, 2, 8, 17, 8, 8, 
                        9, 8, 16, 18, 17, 8, 8, 8, 8, 13, 8, 7, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
                        11, 8, 9, 8, 8, 8, 8, 8, 10, 8, 8, 1, 8, 8, 8, 0, 8, 8, 0, 3, 8, 8, 8, 14, 8, 
                        8, 8, 5, 8, 1, 5, 14, 7, 11, 8, 8, 8, 15, 7, 1, 3, 8, 8, 15, 11, 14, 8, 5, 0, 8
                    };
	int majorElem;
	bool correct=true;
   	bool rc=majorityElement(data,majorElem,5000);
    if(rc!=true){
    	error = "Error 3a: majority element function returned an incorrect value\n";
    	error += "On data = {";
    	for(int j=0; j< 4999 ;j++){
    		error += std::to_string(data[j]);
    		error += ",";
    		if(j%21 == 20){
    			error += "\n";
    		}
    	}
    	error += std::to_string(data[4999]);
    	error +="}\nreturn value should be: true\n";
    	error += "\nyour function is returning: ";
    	error += ((rc)?"true":"false");
    	correct=false;
    }
    else{
    	if(rc==true && majorElem != 8){
			error = "Error 3b: majorityElement found is not the correct value.\n";
    		error += "On data = {";
    		for(int j=0; j< 4999 ;j++){
    			error += std::to_string(data[j]);
    			error += ",";
    			if(j%21 == 20){
    				error += "\n";
    			}
			}
    		error += std::to_string(data[4999]);
			error +="}\nThe correct majority element is: 8";
			error += "\nyour function is passed back: ";
    		error += std::to_string(majorElem);
    		correct=false;
    	}
    }
    return correct;
}

bool test4(std::string& error){
	int* data = new int[63];
	for(int i=0;i<63;i++){
		data[i]=1;
	}
	for(int i=16;i<32;i++){
		data[i]+=1;
	}
	for(int i=48;i<62;i++){
		data[i]+=1;
	}
	int majorElem = -1;
	bool correct=true;
	bool rc=majorityElement(data,majorElem,63);

    if(rc!=true){
    	error = "Error 4a: majority element function returned an incorrect value\n";
    	error += "On data = {";
    	for(int j=0; j< 62 ;j++){
    		error += std::to_string(data[j]);
    		error += ",";
    		if(j%21 == 20){
    			error += "\n";
    		}
    	}
    	error += std::to_string(data[62]);
    	error +="}\nreturn value should be: true\n";
    	error += "\nyour function is returning: ";
    	error += ((rc)?"true":"false");
    	correct=false;
    }
    else{
    	if(rc==true && majorElem != 1){
			error = "Error 4b: majorityElement found is not the correct value.\n";
    		error += "On data = {";
    		for(int j=0; j< 62 ;j++){
    			error += std::to_string(data[j]);
    			error += ",";
    			if(j%21 == 20){
    				error += "\n";
    			}
			}
    		error += std::to_string(data[62]);
			error +="}\nThe correct majority element is: 1";
			error += "\nyour function is passed back: ";
    		error += std::to_string(majorElem);
    		correct=false;
    	}
    }

	delete [] data;
    return correct;

}

bool test5(std::string& error){
	int* data = new int[79];
	for(int i=0;i<79;i++){
		data[i]=1;
	}
	for(int i=0;i<32;i++){
		data[i]+=1;
	}
	for(int i=64;i<72;i++){
		data[i]+=1;
	}
	int majorElem = -1;
	bool correct=true;
	bool rc=majorityElement(data,majorElem,79);

    if(rc!=true){
    	error = "Error 5a: majority element function returned an incorrect value\n";
    	error += "On data = {";
    	for(int j=0; j< 78 ;j++){
    		error += std::to_string(data[j]);
    		error += ",";
    		if(j%21 == 20){
    			error += "\n";
    		}
    	}
    	error += std::to_string(data[78]);
    	error +="}\nreturn value should be: true\n";
    	error += "\nyour function is returning: ";
    	error += ((rc)?"true":"false");
    	correct=false;
    }
    else{
    	if(rc==true && majorElem != 2){
			error = "Error 4b: majorityElement found is not the correct value.\n";
    		error += "On data = {";
    		for(int j=0; j< 78 ;j++){
    			error += std::to_string(data[j]);
    			error += ",";
    			if(j%21 == 20){
    				error += "\n";
    			}
			}
    		error += std::to_string(data[78]);
			error +="}\nThe correct majority element is: 1";
			error += "\nyour function is passed back: ";
    		error += std::to_string(majorElem);
    		correct=false;
    	}
    }

	delete [] data;
    return correct;

}
bool test6(std::string& error){
	int* data = new int[131073];
	for(int i=0;i<131073;i++){
		data[i]=1;
	}
	for(int i=0;i<65536;i++){
		data[i]+=1;
	}
	int majorElem = -1;
	bool correct=true;
	Timer t;
	t.start();
	bool rc=majorityElement(data,majorElem,131073);
	t.stop();
    if(rc!=true){
    	error = "Error 6a: majority element function returned an incorrect value\n";
    	error +="}\nreturn value should be: true\n";
    	error += "\nyour function is returning: ";
    	error += ((rc)?"true":"false");
    	correct=false;
    }
    else{
    	if(rc==true && majorElem != 1){
			error = "Error 6b: majorityElement found is not the correct value.\n";
			error +="}\nThe correct majority element is: 1";
			error += "\nyour function is passed back: ";
    		error += std::to_string(majorElem);
    		correct=false;
    	}
    }
    if(correct){
    	majorElem=-1;
		data[131072]=2;
		t.start();
		rc=majorityElement(data,majorElem,131073);
		t.stop();
	    if(rc!=true){
	    	error = "Error 6c: majority element function returned an incorrect value\n";
	    	error +="}\nreturn value should be: true\n";
	    	error += "\nyour function is returning: ";
	    	error += ((rc)?"true":"false");
	    	correct=false;
	    }
	    else{
	    	if(rc==true && majorElem != 2){
				error = "Error 6d: majorityElement found is not the correct value.\n";
				error +="}\nThe correct majority element is: 2";
				error += "\nyour function is passed back: ";
	    		error += std::to_string(majorElem);
	    		correct=false;
	    	}
	    }
    }
    if(correct){
    	majorElem=-1;
		data[131072]=3;
		t.start();
		rc=majorityElement(data,majorElem,131073);
		t.stop();
	    if(rc!=false){
	    	error = "Error 6e: majority element function returned an incorrect value\n";
	    	error +="}\nreturn value should be: false\n";
	    	error += "\nyour function is returning: ";
	    	error += ((rc)?"true":"false");
	    	correct=false;
	    }
    }
    if(correct){
    	majorElem=-1;
		t.start();
		rc=majorityElement(data,majorElem,131072);
		t.stop();
	    if(rc!=false){
	    	error = "Error 6f: majority element function returned an incorrect value\n";
	    	error +="}\nreturn value should be: false\n";
	    	error += "\nyour function is returning: ";
	    	error += ((rc)?"true":"false");
	    	correct=false;
	    }
    }
    if(correct){
    	std::cout << "131073 * 4 arrays processed in " << t.currtime() << " seconds" << std::endl;
    }

	delete [] data;
    return correct;
}